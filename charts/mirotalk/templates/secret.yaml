{{- if not .Values.common.existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: common
type: Opaque
stringData:
  # OIDC - OpenID Connect
  OIDC_CLIENT_ID: 'ClientID'
  OIDC_CLIENT_SECRET: 'ClientSecret'
  SESSION_SECRET: 'mirotalk-p2p-oidc-secret'

  # Host protection
  # HOST_PROTECTED: 
  #		- When set to true, it requires a valid username and password from the HOST_USERS list to initialize or join a room.
  #		- When OIDC_ENABLED is utilized alongside host protection, the authenticated user will be recognized as valid.# HOST_USER_AUTH: When set to true, it also requires a valid username and password for joining the room.
  # HOST_USERS: This is the list of valid users along with their credentials.

  HOST_PROTECTED: 'false' # true or false
  HOST_USER_AUTH: 'false' # true or false
  HOST_USERS: '[{"username": "admin", "password": "admin"},{"username": "guest", "password": "guest"}]'

  # JWT token config

  JWT_KEY: mirotalkp2p_jwt_secret

  # Ngrok
  NGROK_AUTH_TOKEN: YourNgrokAuthToken

  # Turn 
  TURN_SERVER_USERNAME: e8dd65b92c62d3e36cafb807
  TURN_SERVER_CREDENTIAL: uWdWNmkhvyqTEswO

  # API
  API_KEY_SECRET: mirotalkp2p_default_secret

  # Slack Integration (optional)
  SLACK_SIGNING_SECRET: YourSlackSigningSecret

  # Mattermost Integration (optional)
  MATTERMOST_USERNAME: YourMattermostUsername
  MATTERMOST_PASSWORD: YourMattermostPassword
  MATTERMOST_TOKEN: YourMettarmostToken

  # ChatGPT/OpenAI
  CHATGPT_APIKEY: YourOpenAiApiKey

  # Configure email settings for notifications or alerts
  EMAIL_USERNAME: your_username
  EMAIL_PASSWORD: your_password
  {{- end }}